@model InmobiliariaCA.Models.InmuebleViewModel
@{
    ViewData["Title"] = "Inmueble detalle";
    System.Globalization.CultureInfo culturaArgentina = new System.Globalization.CultureInfo("es-AR");
    string precioFormateado = Model.Precio.ToString("C", culturaArgentina);
}

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h2><i class="fas fa-info-circle me-2"></i>Detalles del Inmueble</h2>
        </div>
        <div class="card-body">
            <dl class="row">
                <input type="hidden" id="Coordenada_Lat" value="@Model.Coordenada_Lat" />
                <input type="hidden" id="Coordenada_Lon" value="@Model.Coordenada_Lon" />

                <dt class="col-sm-3"><i class="fas fa-user me-2"></i>Propietario</dt>
                <dd class="col-sm-9">
                    @if (Model.Propietario != null)
                    {
                        @Model.Propietario.Apellido @Model.Propietario.Nombre
                    }
                    else
                    {
                        <span>No disponible</span>
                    }
                </dd>

                <dt class="col-sm-3"><i class="fas fa-map-marker-alt me-2"></i>Dirección</dt>
                <dd class="col-sm-9">@Model.Direccion</dd>

                <dt class="col-sm-3"><i class="fas fa-building me-2"></i>Tipo</dt>
                <dd class="col-sm-9">@Model.Tipo?.Descripcion</dd>

                <dt class="col-sm-3"><i class="fas fa-warehouse me-2"></i>Tipo de Uso</dt>
                <dd class="col-sm-9">@Model.Tipo_Uso?.Descripcion</dd>

                <dt class="col-sm-3"><i class="fas fa-door-open me-2"></i>Ambientes</dt>
                <dd class="col-sm-9">@Model.Ambientes</dd>

                <dt class="col-sm-3"><i class="fas fa-dollar-sign me-2"></i>Precio</dt>
                <dd class="col-sm-9">@precioFormateado</dd>
                <dt class="col-sm-3"><i class="fas fa-check"></i>Activo/Desactivado</dt>
                @if (Model.Activo)
                {
                    <dd class="col-sm-9">Activo</dd>
                }
                else{
                    <dd class="col-sm-9">Desactivado</dd>
                }
            </dl>

            <div id="map" style="height: 500px; width: 100%;"></div>
            <div></div>
            <!-- Listado de contratos -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="text-primary"><i class="fas fa-file-contract"></i> Lista de Contratos</h2>
                @* <a href="@Url.Action("AltaEditar", "Contrato")" class="btn btn-success shadow-sm"><i class="fas fa-plus-circle"></i> Agregar Nuevo Contrato</a> *@
            </div>
            
            <div class="row">
                @if (Model.Contratos.Any()) {
                    foreach (var contrato in Model.Contratos) {
                        <div class="col-12 mb-4">
                            <div class="card shadow-sm">
                                <div class="card-body">
                                    <h5 class="card-title text-white p-2" style="background-color: @(contrato.EsFinalizado() ? "#f26060" : "#2d94f5");">Nro Contrato: @contrato.Id</h5>                            
                                    @* <p class="card-text"><strong>Inmueble:</strong> @contrato.Inmueble?.NombreInmueble</p> *@
                                    <p class="card-text"><strong>Inquilino:</strong> @contrato.Inquilino?.NombreCompletoDNI</p>
                                    <p class="card-text"><strong>Fecha Desde:</strong> @contrato.Fecha_Desde.ToShortDateString()</p>
                                    <p class="card-text"><strong>Fecha Hasta:</strong> @contrato.Fecha_Hasta.ToShortDateString()</p>
                                    @* <p class="card-text"><strong>Monto de Alquiler:</strong> @contrato.Monto_Alquiler</p> *@
                                    <p class="card-text"><strong>Monto de Alquiler:</strong>$ @Html.Raw(contrato.Monto_Alquiler.ToString().Replace(",", "."))</p>
                                    <p class="card-text"><strong>Estado:</strong> @contrato.Estado.ToString()</p>
                                    <div class="d-flex justify-content-end">
                                        <a href="@Url.Action("Detalle", "Contrato", new { id = contrato.Id })" class="btn btn-info btn-sm mx-1 shadow-sm"><i class="fas fa-eye"></i> Ver</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                } else {
                    <div class="alert alert-info" role="alert">
                        <i class="fas fa-info-circle"></i> No existen contratos realizados.
                    </div>
                }
            </div>
        </div>
        <div class="card-footer text-end">
            <a href="@Url.Action("AltaEditar", "Inmueble", new { id = Model.Id })" class="btn btn-warning">
                <i class="fas fa-edit me-2"></i>Editar
            </a>
            @if (User.IsInRole("administrador"))
            {
                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#modalBajaLogica">
                    <i class="fas fa-trash-alt me-2"></i>Eliminar
                </button>
            }
            <a href="@Url.Action("Index", "Inmueble")" class="btn btn-secondary">
                <i class="fas fa-arrow-left me-2"></i>Volver a la Lista
            </a>
        </div>
    </div>
</div>

<!-- Modal para confirmación de eliminación -->
<div class="modal fade" id="modalBajaLogica" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Confirmación de Eliminación</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Está seguro que desea eliminar este inmueble? Esta acción no se puede deshacer.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form asp-action="BajaLogica" method="post" class="d-inline">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button type="submit" class="btn btn-danger">Confirmar Eliminación</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css" />

    <script>
        $(document).ready(function () {
            var latitud = parseFloat(document.getElementById("Coordenada_Lat").value) || 0;
            var longitud = parseFloat(document.getElementById("Coordenada_Lon").value) || 0;

            // Inicializar el mapa si las coordenadas son válidas
            if (latitud !== 0 && longitud !== 0) {
                var map = L.map('map').setView([latitud, longitud], 15);

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);

                L.marker([latitud, longitud], { draggable: false }).addTo(map);
            } else {
                $('#map').text("Coordenadas no disponibles para mostrar el mapa.");
            }
        });
    </script>
}
